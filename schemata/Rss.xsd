<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="rss"
    targetNamespace="http://www.rssboard.org/rss-specification"
    xmlns="http://www.rssboard.org/rss-specification"
    xmlns:mstns="http://www.rssboard.org/rss-specification"
    elementFormDefault="qualified"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    version="2.0.11"
>
    <xs:annotation>
        <xs:documentation>XML Schema for RSS feeds 2.0</xs:documentation>
        <xs:documentation>This is based on the RSS 2.0.11 specification document defined by RSS Advisory Board (http://www.rssboard.org/rss-specification).</xs:documentation>
        <xs:documentation>URL: http://feed-schemata.aliencube.org</xs:documentation>
        <xs:documentation>Author: Aliencube Community</xs:documentation>
        <xs:documentation>Issues: Any issue related this can be raised here (https://github.com/aliencube/Feed-Schemata/issues).</xs:documentation>
        <xs:documentation>License: This is released under MIT License (http://opensource.org/licenses/MIT).</xs:documentation>
        <xs:documentation>Acknowledgement: This is inspired by RSS 2.0 Schema (http://rss2schema.codeplex.com).</xs:documentation>
    </xs:annotation>

    <xs:element name="rss" type="Rss">
        <xs:annotation>
            <xs:documentation>Defines the root element of the RSS feed.</xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:complexType name="Rss">
        <xs:annotation>
            <xs:documentation>Defines the root element of the RSS feed.</xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="channel" type="Channel">
                <xs:annotation>
                    <xs:documentation>Defines the channel element of the RSS feed.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>

        <xs:attribute name="version" type="xs:decimal" use="required" fixed="2.0">
            <xs:annotation>
                <xs:documentation>Defines the version of the RSS feed.</xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:anyAttribute namespace="##any">
            <xs:annotation>
                <xs:documentation>Extensibility attribute to define additional namespaces.</xs:documentation>
            </xs:annotation>
        </xs:anyAttribute>
    </xs:complexType>

    <xs:complexType name="Channel">
        <xs:annotation>
            <xs:documentation>Defines the channel element of the RSS feed.</xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <!-- Required elements -->
                <xs:element name="title" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The name of the channel. It's how people refer to your service. If you have an HTML website that contains the same information as your RSS file, the title of your channel should be the same as the title of your website.</xs:documentation>
                        <xs:documentation><![CDATA[Example: <pre>GoUpstate.com News Headlines</pre>]]></xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="link" type="xs:anyURI">
                    <xs:annotation>
                        <xs:documentation>The URL to the HTML website corresponding to the channel.</xs:documentation>
                        <xs:documentation><![CDATA[Example: <pre>http://www.goupstate.com/</pre>]]></xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="description" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Phrase or sentence describing the channel.</xs:documentation>
                        <xs:documentation><![CDATA[Example: <pre>The latest news from GoUpstate.com, a Spartanburg Herald-Journal Web site.</pre>]]></xs:documentation>
                    </xs:annotation>
                </xs:element>
                
                <!-- Optional elements -->
                <xs:element name="language" type="xs:language" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>The language the channel is written in. This allows aggregators to group all Italian language sites, for example, on a single page. A list of allowable values for this element, as provided by Netscape, is [here](http://www.rssboard.org/rss-language-codes). You may also use [values defined](http://www.w3.org/TR/REC-html40/struct/dirlang.html#langcodes) by the W3C.</xs:documentation>
                        <xs:documentation><![CDATA[Example: <pre>en-us</pre>]]></xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="copyright" type="xs:string" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Copyright notice for content in the channel.</xs:documentation>
                        <xs:documentation><![CDATA[Example: <pre>Copyright 2002, Spartanburg Herald-Journal</pre>]]></xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="managingEditor" type="EmailAddress" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Email address for person responsible for editorial content.</xs:documentation>
                        <xs:documentation><![CDATA[Example: <pre>geo@herald.com (George Matesky)</pre>]]></xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="webMaster" type="EmailAddress" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Email address for person responsible for technical issues relating to channel.</xs:documentation>
                        <xs:documentation><![CDATA[Example: <pre>betty@herald.com (Betty Guernsey)</pre>]]></xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="pubDate" type="Rfc822DateTimeFormat" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>The publication date for the content in the channel. All date-times in RSS conform to the Date and Time Specification of [RFC 822](http://asg.web.cmu.edu/rfc/rfc822.html), with the exception that the year may be expressed with two characters or four characters (four preferred).</xs:documentation>
                        <xs:documentation><![CDATA[Example: <pre>Sat, 07 Sep 2002 00:00:01 GMT</pre>]]></xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="lastBuildDate" type="Rfc822DateTimeFormat" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>The last time the content of the channel changed.</xs:documentation>
                        <xs:documentation><![CDATA[Example: <pre>Sat, 07 Sep 2002 09:42:31 GMT</pre>]]></xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="category" type="Category" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Specify one or more categories that the channel belongs to. Follows the same rules as the &lt;item&gt;-level [category](http://www.rssboard.org/rss-specification#ltcategorygtSubelementOfLtitemgt) element. More [info](http://www.rssboard.org/rss-specification#syndic8).</xs:documentation>
                        <xs:documentation><![CDATA[Example: <pre>&lt;category&gt;Newspapers&lt;/category&gt;</pre>]]></xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="generator" type="xs:string" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>A string indicating the program used to generate the channel.</xs:documentation>
                        <xs:documentation><![CDATA[Example: <pre>MightyInHouse Content System v2.3</pre>]]></xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="docs" type="xs:anyURI" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>A URL that points to the [documentation](http://www.rssboard.org/rss-specification) for the format used in the RSS file. It's probably a pointer to this page. It's for people who might stumble across an RSS file on a Web server 25 years from now and wonder what it is.</xs:documentation>
                        <xs:documentation><![CDATA[Example: <pre>http://www.rssboard.org/rss-specification</pre>]]></xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="cloud" type="Cloud" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Allows processes to register with a cloud to be notified of updates to the channel, implementing a lightweight publish-subscribe protocol for RSS feeds. More info [here](http://www.rssboard.org/rss-specification#ltcloudgtSubelementOfLtchannelgt).</xs:documentation>
                        <xs:documentation><![CDATA[Example: <pre>&lt;cloud domain="rpc.sys.com" port="80" path="/RPC2" registerProcedure="pingMe" protocol="soap"/&gt;</pre>]]></xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="ttl" type="xs:nonNegativeInteger" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>ttl stands for time to live. It's a number of minutes that indicates how long a channel can be cached before refreshing from the source. More info [here](http://www.rssboard.org/rss-specification#ltttlgtSubelementOfLtchannelgt).</xs:documentation>
                        <xs:documentation><![CDATA[Example: <pre>&lt;ttl&gt;60&lt;/ttl&gt;</pre>]]></xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="image" type="Image" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Specifies a GIF, JPEG or PNG image that can be displayed with the channel. More info [here](http://www.rssboard.org/rss-specification#ltimagegtSubelementOfLtchannelgt).</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="rating" type="xs:string" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>The [PICS](http://www.w3.org/PICS/) rating for the channel.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="textInput" type="TextInput" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Specifies a text input box that can be displayed with the channel. More info [here](http://www.rssboard.org/rss-specification#lttextinputgtSubelementOfLtchannelgt).</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="skipHours" type="SkipHoursList" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>A hint for aggregators telling them which hours they can skip. This element contains up to 24 &lt;hour&gt; sub-elements whose value is a number between 0 and 23, representing a time in GMT, when aggregators, if they support the feature, may not read the channel on hours listed in the &lt;skipHours&gt; element. The hour beginning at midnight is hour zero.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="skipDays" type="SkipDaysList" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>A hint for aggregators telling them which days they can skip. This element contains up to seven &lt;day&gt; sub-elements whose value is Monday, Tuesday, Wednesday, Thursday, Friday, Saturday or Sunday. Aggregators may not read the channel during days listed in the &lt;skipDays&gt; element.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                
                <!-- Extensible elements -->
                <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>Extensibility element.</xs:documentation>
                    </xs:annotation>
                </xs:any>
            </xs:choice>

            <xs:element name="item" type="Item" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>

        <xs:anyAttribute namespace="##any">
            <xs:annotation>
                <xs:documentation>Extensibility attribute to define namespaced ones.</xs:documentation>
            </xs:annotation>
        </xs:anyAttribute>
    </xs:complexType>

    <xs:complexType name="Image">
        <xs:annotation>
            <xs:documentation>Is an optional sub-element of &lt;channel&gt;, which contains three required and three optional sub-elements.</xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <!-- Required elements -->
                <xs:element name="url" type="xs:anyURI">
                    <xs:annotation>
                        <xs:documentation>Is the URL of a GIF, JPEG or PNG image that represents the channel.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="title" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Describes the image, it's used in the ALT attribute of the HTML &lt;img&gt; tag when the channel is rendered in HTML.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="link" type="xs:anyURI">
                    <xs:annotation>
                        <xs:documentation>is the URL of the site, when the channel is rendered, the image is a link to the site. (Note, in practice the image &lt;title&gt; and &lt;link&gt; should have the same value as the channel's &lt;title&gt; and &lt;link&gt;.</xs:documentation>
                    </xs:annotation>
                </xs:element>

                <!-- Optional elements -->
                <xs:element name="width" type="ImageWidth" default="88" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Indicates the width of the image in pixels.</xs:documentation>
                        <xs:documentation>Maximum value for width is 144.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="height" type="ImageHeight" default="31" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Indicates the height of the image in pixels.</xs:documentation>
                        <xs:documentation>Maximum value for width is 400.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="description" type="xs:string" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Text that is included in the TITLE attribute of the link formed around the image in the HTML rendering.</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="ImageWidth">
        <xs:annotation>
            <xs:documentation>Indicates the height of the image in pixels.</xs:documentation>
            <xs:documentation>Maximum value for width is 144.</xs:documentation>
        </xs:annotation>

        <xs:restriction base="xs:positiveInteger">
            <xs:maxInclusive value="144" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="ImageHeight">
        <xs:annotation>
            <xs:documentation>Indicates the width of the image in pixels.</xs:documentation>
            <xs:documentation>Maximum value for width is 400.</xs:documentation>
        </xs:annotation>

        <xs:restriction base="xs:positiveInteger">
            <xs:maxInclusive value="400" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="Cloud">
        <xs:annotation>
            <xs:documentation>Specifies a web service that supports the rssCloud interface which can be implemented in HTTP-POST, XML-RPC or SOAP 1.1. Its purpose is to allow processes to register with a cloud to be notified of updates to the channel, implementing a lightweight publish-subscribe protocol for RSS feeds.</xs:documentation>
        </xs:annotation>

        <xs:attribute name="domain" type="xs:string" use="required" />
        <xs:attribute name="port" type="xs:positiveInteger" use="required" />
        <xs:attribute name="path" type="xs:string" use="required" />
        <xs:attribute name="registerProcedure" type="xs:string" use="required" />
        <xs:attribute name="protocol" type="CloudProtocol" use="required" />
    </xs:complexType>

    <xs:simpleType name="CloudProtocol">
        <xs:annotation>
            <xs:documentation>Specifies the web service protocol for rssCloud interface.</xs:documentation>
        </xs:annotation>

        <xs:restriction base="xs:string">
            <xs:enumeration value="xml-rpc" />
            <xs:enumeration value="http-post" />
            <xs:enumeration value="soap" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="TextInput">
        <xs:annotation>
            <xs:documentation>The purpose of this element is something of a mystery! You can use it to specify a search engine box. Or to allow a reader to provide feedback. Most aggregators ignore it.</xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <!-- Required elements -->
                <xs:element name="title" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The label of the Submit button in the text input area.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="description" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Explains the text input area.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="name" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The name of the text object in the text input area.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="link" type="xs:anyURI">
                    <xs:annotation>
                        <xs:documentation>The URL of the CGI script that processes text input requests.</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="SkipHoursList">
        <xs:annotation>
            <xs:documentation>A hint for aggregators telling them which hours they can skip. This element contains up to 24 &lt;hour&gt; sub-elements whose value is a number between 0 and 23, representing a time in GMT, when aggregators, if they support the feature, may not read the channel on hours listed in the &lt;skipHours&gt; element. The hour beginning at midnight is hour zero.</xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="hour" type="SkipHour" minOccurs="0" maxOccurs="24" />
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="SkipHour">
        <xs:annotation>
            <xs:documentation>A hint for aggregators telling them which hours they can skip. This element contains up to 24 &lt;hour&gt; sub-elements whose value is a number between 0 and 23, representing a time in GMT, when aggregators, if they support the feature, may not read the channel on hours listed in the &lt;skipHours&gt; element. The hour beginning at midnight is hour zero.</xs:documentation>
        </xs:annotation>

        <xs:restriction base="xs:nonNegativeInteger">
            <xs:minInclusive value="0" />
            <xs:maxInclusive value="23" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="SkipDaysList">
        <xs:annotation>
            <xs:documentation>A hint for aggregators telling them which days they can skip. This element contains up to seven &lt;day&gt; sub-elements whose value is Monday, Tuesday, Wednesday, Thursday, Friday, Saturday or Sunday. Aggregators may not read the channel during days listed in the &lt;skipDays&gt; element.</xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="day" type="SkipDay" minOccurs="0" maxOccurs="7" />
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="SkipDay">
        <xs:annotation>
            <xs:documentation>A hint for aggregators telling them which days they can skip. This element contains up to seven &lt;day&gt; sub-elements whose value is Monday, Tuesday, Wednesday, Thursday, Friday, Saturday or Sunday. Aggregators may not read the channel during days listed in the &lt;skipDays&gt; element.</xs:documentation>
        </xs:annotation>

        <xs:restriction base="xs:string">
            <xs:enumeration value="Monday" />
            <xs:enumeration value="Tuesday" />
            <xs:enumeration value="Wednesday" />
            <xs:enumeration value="Thursday" />
            <xs:enumeration value="Friday" />
            <xs:enumeration value="Saturday" />
            <xs:enumeration value="Sunday" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="Item">
        <xs:annotation>
            <xs:documentation>A channel may contain any number of &lt;item&gt;s. An item may represent a "story" -- much like a story in a newspaper or magazine; if so its description is a synopsis of the story, and the link points to the full story. An item may also be complete in itself, if so, the description contains the text (entity-encoded HTML is allowed; see [examples](http://www.rssboard.org/rss-encoding-examples)), and the link and title may be omitted. All elements of an item are optional, however at least one of title or description must be present.</xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <!-- Required elements -->
                <xs:element name="title" type="xs:string" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>The title of the item.</xs:documentation>
                        <xs:documentation><![CDATA[Example: <pre>Venice Film Festival Tries to Quit Sinking</pre>]]></xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="link" type="xs:anyURI" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>The URL of the item.</xs:documentation>
                        <xs:documentation><![CDATA[Example: <pre>http://nytimes.com/2004/12/07FEST.html</pre>]]></xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="description" type="xs:string" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>The item synopsis.</xs:documentation>
                        <xs:documentation><![CDATA[Example: <pre>&lt;description&gt;Some of the most heated chatter at the Venice Film Festival this week was about the way that the arrival of the stars at the Palazzo del Cinema was being staged.&lt;/description&gt;</pre>]]></xs:documentation>
                    </xs:annotation>
                </xs:element>
                
                <!-- Optional elements -->
                <xs:element name="author" type="EmailAddress" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Email address of the author of the item. [More](http://www.rssboard.org/rss-specification#ltauthorgtSubelementOfLtitemgt).</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="category" type="Category" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Includes the item in one or more categories. [More](http://www.rssboard.org/rss-specification#ltcategorygtSubelementOfLtitemgt).</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="comments" type="xs:anyURI" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>URL of a page for comments relating to the item. [More](http://www.rssboard.org/rss-specification#ltcommentsgtSubelementOfLtitemgt).</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="enclosure" type="Enclosure" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Describes a media object that is attached to the item. [More](http://www.rssboard.org/rss-specification#ltenclosuregtSubelementOfLtitemgt).</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="guid" type="Guid" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>guid or permalink URL for this entry. [More](http://www.rssboard.org/rss-specification#ltguidgtSubelementOfLtitemgt).</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="pubDate" type="Rfc822DateTimeFormat" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Indicates when the item was published. [More](http://www.rssboard.org/rss-specification#ltpubdategtSubelementOfLtitemgt).</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="source" type="Source" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>The RSS channel that the item came from. [More](http://www.rssboard.org/rss-specification#ltsourcegtSubelementOfLtitemgt).</xs:documentation>
                    </xs:annotation>
                </xs:element>

                <!-- Extensible elements -->
                <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded">
                    <xs:annotation>
                        <xs:documentation>Extensibility element.</xs:documentation>
                    </xs:annotation>
                </xs:any>
            </xs:choice>
        </xs:sequence>

        <xs:anyAttribute namespace="##any">
            <xs:annotation>
                <xs:documentation>Extensibility attribute to define namespaced ones.</xs:documentation>
            </xs:annotation>
        </xs:anyAttribute>
    </xs:complexType>

    <xs:complexType name="Source">
        <xs:annotation>
            <xs:documentation>The RSS channel that the item came from. [More](http://www.rssboard.org/rss-specification#ltsourcegtSubelementOfLtitemgt).</xs:documentation>
        </xs:annotation>

        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="url" type="xs:anyURI" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="Enclosure">
        <xs:annotation>
            <xs:documentation>Describes a media object that is attached to the item. [More](http://www.rssboard.org/rss-specification#ltenclosuregtSubelementOfLtitemgt).</xs:documentation>
        </xs:annotation>

        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="url" type="xs:anyURI" use="required">
                    <xs:annotation>
                        <xs:documentation>URL where the enclosure is located</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="length" type="xs:nonNegativeInteger" use="required">
                    <xs:annotation>
                        <xs:documentation>Size in bytes</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="type" type="xs:string" use="required">
                    <xs:annotation>
                        <xs:documentation>MIME media-type of the enclosure</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="Category">
        <xs:annotation>
            <xs:documentation>Includes the item in one or more categories.</xs:documentation>
        </xs:annotation>

        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="domain" type="xs:string" use="optional" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="Guid">
        <xs:annotation>
            <xs:documentation>guid or permalink URL for this entry.</xs:documentation>
        </xs:annotation>

        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="isPermaLink" type="xs:boolean" use="optional" default="true" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:simpleType name="EmailAddress">
        <xs:annotation>
            <xs:documentation>Using the regexp definiton of E-Mail Address by Lucadean from the .NET RegExp Pattern Repository at http://www.3leaf.com/default/NetRegExpRepository.aspx </xs:documentation>
        </xs:annotation>

        <xs:restriction base="xs:string">
            <xs:pattern value="([a-zA-Z0-9_\-])([a-zA-Z0-9_\-\.]*)@(\[((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}|((([a-zA-Z0-9\-]+)\.)+))([a-zA-Z]{2,}|(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\])" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Rfc822DateTimeFormat">
        <xs:annotation>
            <xs:documentation>A date-time displayed in RFC-822 format.</xs:documentation>
            <xs:documentation>Using the regexp definiton of rfc-822 date by Sam Ruby at http://www.intertwingly.net/blog/1360.html </xs:documentation>
        </xs:annotation>

        <xs:restriction base="xs:string">
            <xs:pattern value="(((Mon)|(Tue)|(Wed)|(Thu)|(Fri)|(Sat)|(Sun)), *)?\d\d? +((Jan)|(Feb)|(Mar)|(Apr)|(May)|(Jun)|(Jul)|(Aug)|(Sep)|(Oct)|(Nov)|(Dec)) +\d\d(\d\d)? +\d\d:\d\d(:\d\d)? +(([+\-]?\d\d\d\d)|(UT)|(GMT)|(EST)|(EDT)|(CST)|(CDT)|(MST)|(MDT)|(PST)|(PDT)|\w)" />
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
