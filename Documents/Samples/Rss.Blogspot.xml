<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:openSearch="http://a9.com/-/spec/opensearchrss/1.0/" xmlns:blogger="http://schemas.google.com/blogger/2008" xmlns:georss="http://www.georss.org/georss" xmlns:gd="http://schemas.google.com/g/2005" xmlns:thr="http://purl.org/syndication/thread/1.0" version="2.0">
    <channel>
        <atom:id>tag:blogger.com,1999:blog-7398307829676957263</atom:id>
        <lastBuildDate>Mon, 09 Dec 2013 12:02:49 +0000</lastBuildDate>
        <category>Gradle</category>
        <category>그래들</category>
        <category>Android</category>
        <category>Gradle 1.6</category>
        <category>Android Studio</category>
        <category>라이브러리</category>
        <category>안드로이드</category>
        <title>Life and Nectarine</title>
        <description></description>
        <link>http://changyeopkim.blogspot.com/search/label/Android</link>
        <managingEditor>noreply@blogger.com (김창엽)</managingEditor>
        <generator>Blogger</generator>
        <openSearch:totalResults>3</openSearch:totalResults>
        <openSearch:startIndex>1</openSearch:startIndex>
        <openSearch:itemsPerPage>25</openSearch:itemsPerPage>
        <item>
            <guid isPermaLink="false">tag:blogger.com,1999:blog-7398307829676957263.post-5532539287232464868</guid>
            <pubDate>Thu, 23 May 2013 05:24:00 +0000</pubDate>
            <atom:updated>2013-07-03T18:07:48.139-07:00</atom:updated>
            <category domain="http://www.blogger.com/atom/ns#">Android</category>
            <category domain="http://www.blogger.com/atom/ns#">Android Studio</category>
            <category domain="http://www.blogger.com/atom/ns#">Gradle</category>
            <title>Android Studio (Intellij) using Android Library Project via Gradle</title>
            <description>Android Studio is a quiet fancy tool. Since Android Studio is a new-born baby for us, it makes a lots of troubles and we don&#39;t know how to control it.&lt;br /&gt;&lt;br /&gt;One of most important problem in these days is how to import library project via Gradle.&lt;br /&gt;As&amp;nbsp;&lt;a class=&quot;g-profile&quot; href=&quot;http://plus.google.com/109385828142935151413&quot; target=&quot;_blank&quot;&gt;+Xavier Ducrohet&lt;/a&gt;&amp;nbsp; &lt;a href=&quot;https://plus.google.com/u/0/109385828142935151413/posts/HNroAXA2tAq&quot;&gt;told&lt;/a&gt;, changing module setting is not a proper way to use Android Studio. Every dependencies should be handled by Gradle.&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;http://tools.android.com/tech-docs/new-build-system/user-guide&quot;&gt;http://tools.android.com/tech-docs/new-build-system/user-guide&lt;/a&gt;&amp;nbsp;contains many useful infos.&lt;br /&gt;&lt;br /&gt;Let&#39;s follow step by step.&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;ol&gt;&lt;li&gt;Starting from non-gradle Android library project. Make sure you must use &lt;a href=&quot;http://developer.android.com/sdk/installing/migrate.html&quot;&gt;ADT Version&amp;gt;= 22&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Following above link, generate Gradle files.&lt;br /&gt;(Eclipse -&amp;gt; Exports -&amp;gt; Android: Generate Gradle build files)&lt;/li&gt;&lt;li&gt;Now, you have build.gradle.&lt;br /&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;a href=&quot;http://4.bp.blogspot.com/-aLvAsZo06LY/UZ2iVbr9cxI/AAAAAAAAAMg/iF58GSW7SUs/s1600/K-15.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em; text-align: center;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;348&quot; src=&quot;http://4.bp.blogspot.com/-aLvAsZo06LY/UZ2iVbr9cxI/AAAAAAAAAMg/iF58GSW7SUs/s640/K-15.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Copy library project into your main project&lt;/b&gt;(Android Studio Project).&lt;br /&gt;In Android Studio project structure, there is two project. For me, Project name is &lt;b&gt;SocketIOTest&lt;/b&gt;. So, inside of SocketIOTest(Root project), I have another &lt;b&gt;SocketIOTest &lt;/b&gt;folder. Check out below picture, and watch carefully the location of library project folder.&lt;br /&gt;&lt;a href=&quot;http://3.bp.blogspot.com/-DtAw1tT6Tew/UZ2kP0KDsUI/AAAAAAAAAMw/ZV8aK-2S_8g/s1600/K-16.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em; text-align: center;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;238&quot; src=&quot;http://3.bp.blogspot.com/-DtAw1tT6Tew/UZ2kP0KDsUI/AAAAAAAAAMw/ZV8aK-2S_8g/s640/K-16.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Open project with Android Studio&lt;br /&gt;&lt;a href=&quot;http://3.bp.blogspot.com/-8XoWBjceLhk/UZ2e1MN6HqI/AAAAAAAAAL4/q3iyCY7KgDc/s1600/K-5.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em; text-align: center;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;348&quot; src=&quot;http://3.bp.blogspot.com/-8XoWBjceLhk/UZ2e1MN6HqI/AAAAAAAAAL4/q3iyCY7KgDc/s640/K-5.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Modify settings.gradle to import android library project.&lt;br /&gt;after default include, add &lt;b&gt;&#39;:ProjectName:libs:libProjectName&#39;&lt;/b&gt;&lt;br /&gt;&lt;a href=&quot;http://4.bp.blogspot.com/-URwi9tN2KpY/UZ2ks5jtHDI/AAAAAAAAAM4/CjrrFirdyt0/s1600/K-17.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em; text-align: center;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;212&quot; src=&quot;http://4.bp.blogspot.com/-URwi9tN2KpY/UZ2ks5jtHDI/AAAAAAAAAM4/CjrrFirdyt0/s640/K-17.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Modify build.gradle &lt;b&gt;in the your main project (not root project).&lt;/b&gt;&lt;br /&gt;You don&#39;t have to touch build.gradle in root which is empty&lt;br /&gt;&lt;br /&gt;In dependencies, add &lt;b&gt;compile projects(&#39;libs:libProjectName&#39;)&lt;/b&gt;&lt;br /&gt;&lt;a href=&quot;http://1.bp.blogspot.com/-wHUQFAd4UdI/UZ2lSZtqVoI/AAAAAAAAANA/XdJsqiquB0M/s1600/K-18.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em; text-align: center;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;430&quot; src=&quot;http://1.bp.blogspot.com/-wHUQFAd4UdI/UZ2lSZtqVoI/AAAAAAAAANA/XdJsqiquB0M/s640/K-18.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Test your setting is correct.&lt;br /&gt;Open a terminal (or cmd in Windows), go to project root directory.&lt;br /&gt;Then run &lt;b&gt;gradlew build.&lt;/b&gt;&lt;br /&gt;&lt;a href=&quot;http://4.bp.blogspot.com/-bEP6-9SX5oo/UZ2l03nclGI/AAAAAAAAANM/HhyHmFscgD4/s1600/K-13.png&quot; imageanchor=&quot;1&quot; style=&quot;font-weight: normal; margin-left: 1em; margin-right: 1em; text-align: center;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;640&quot; src=&quot;http://4.bp.blogspot.com/-bEP6-9SX5oo/UZ2l03nclGI/AAAAAAAAANM/HhyHmFscgD4/s640/K-13.png&quot; width=&quot;418&quot; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;If you did correct, you can get &lt;b&gt;Build Successful&lt;/b&gt; Message.&lt;br /&gt;If build was failed, you have some problem in gradle files.&lt;/li&gt;&lt;li&gt;&lt;strike&gt;Here is an ugly part. Now, we have to reconfigure Android Studio setting with our gradle files, but I couldn&#39;t find how to. So, just &lt;/strike&gt;&lt;b style=&quot;text-decoration: line-through;&quot;&gt;restart Android Studio&lt;/b&gt;&lt;strike&gt;&amp;nbsp;:(&lt;/strike&gt;&lt;br /&gt;&lt;strike&gt;If you know how to, please let me know. Build - Rebuild Project was not working for me.&lt;/strike&gt;&lt;br /&gt;Now we are on Android Studio 0.1.9, many features are fixed and added. To&amp;nbsp;re-synchronize&amp;nbsp;project from gradle files, use &lt;b&gt;Tools-Android-Sync Project with Gradle Files.&lt;/b&gt;&amp;nbsp;(thanks to&amp;nbsp;&lt;a class=&quot;g-profile&quot; href=&quot;http://plus.google.com/115578224090485355580&quot; target=&quot;_blank&quot;&gt;+David Webb&lt;/a&gt;&amp;nbsp;for comment)&lt;/li&gt;&lt;li&gt;&lt;strike&gt;After restarting Android Studio, it will rebuild your project via Gradle and configured automatically.&lt;/strike&gt;&lt;br /&gt;&lt;a href=&quot;http://4.bp.blogspot.com/-NftbeyScTRM/UZ2nebhXI3I/AAAAAAAAANc/Iyoy5wfO_As/s1600/K-19.png&quot; imageanchor=&quot;1&quot; style=&quot;margin-left: 1em; margin-right: 1em; text-align: center;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;430&quot; src=&quot;http://4.bp.blogspot.com/-NftbeyScTRM/UZ2nebhXI3I/AAAAAAAAANc/Iyoy5wfO_As/s640/K-19.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;If you have any problem, please leave a comment. Happy Android Coding!&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</description>
            <link>http://changyeopkim.blogspot.com/2013/05/android-studio-intellij-using-android.html</link>
            <author>noreply@blogger.com (김창엽)</author>
            <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://4.bp.blogspot.com/-aLvAsZo06LY/UZ2iVbr9cxI/AAAAAAAAAMg/iF58GSW7SUs/s72-c/K-15.png" height="72" width="72"/>
            <thr:total>6</thr:total>
        </item>
        <item>
            <guid isPermaLink="false">tag:blogger.com,1999:blog-7398307829676957263.post-8838312646781987316</guid>
            <pubDate>Fri, 10 May 2013 05:01:00 +0000</pubDate>
            <atom:updated>2013-09-26T19:34:46.470-07:00</atom:updated>
            <category domain="http://www.blogger.com/atom/ns#">Android</category>
            <category domain="http://www.blogger.com/atom/ns#">라이브러리</category>
            <category domain="http://www.blogger.com/atom/ns#">안드로이드</category>
            <title>Android 추천 라이브러리</title>
            <description>&lt;br /&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;h4&gt;&lt;span lang=&quot;EN-US&quot;&gt;UI&lt;/span&gt;&lt;/h4&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;b&gt;ActionbarSherlock&lt;/b&gt;: http://actionbarsherlock.com/&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;ActionBar&lt;/span&gt;의 호환성을 보장하는 라이브러리&lt;span lang=&quot;EN-US&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;b&gt;Android Query&lt;/b&gt;: http://code.google.com/p/android-query/&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;UI &lt;/span&gt;엘리먼트를 비동기적으로 처리할 수 있도록 도와주는 라이브러리&lt;span lang=&quot;EN-US&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;b&gt;Android Pull To Refresh&lt;/b&gt;: https://github.com/johannilsson/android-pulltorefresh&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;iOS&lt;/span&gt;에서 많이 사용하는 리스트를 당겨서 새로고침 라이브러리&lt;span lang=&quot;EN-US&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;b&gt;AndroidViews&lt;/b&gt;: http://www.androidviews.net/&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;각종 커스텀&lt;span lang=&quot;EN-US&quot;&gt; View&lt;/span&gt;를 소개하는 사이트&lt;span lang=&quot;EN-US&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;h4&gt;전반적&lt;/h4&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;b&gt;Otto&lt;/b&gt;: http://square.github.com/otto/&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;믿고 쓰는 스퀘어산 이벤트 버스&lt;span lang=&quot;EN-US&quot;&gt;. &lt;/span&gt;이벤트 버스를 통해 만든 이벤트를 포스트하고&lt;span lang=&quot;EN-US&quot;&gt; subscribe&lt;/span&gt;하고 있는 부분에서 해당 이벤트를 받을 수 있다&lt;span lang=&quot;EN-US&quot;&gt;. &lt;/span&gt;더럽게&lt;span lang=&quot;EN-US&quot;&gt; Activity Result&lt;/span&gt;를 통해서 번들을 주고 받거나 하지 않아도 되서 편리&lt;span lang=&quot;EN-US&quot;&gt;.&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;b&gt;Wishlist&lt;/b&gt;: https://github.com/kevinsawicki/wishlist&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;안드로이드의 각종 귀찮은 점을 편하게 만들어준 고마운 라이브러리&lt;span lang=&quot;EN-US&quot;&gt;&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;b&gt;ButterKnife&lt;/b&gt;:&amp;nbsp;&lt;a href=&quot;https://github.com/JakeWharton/butterknife&quot;&gt;https://github.com/JakeWharton/butterknife&lt;/a&gt;&lt;br /&gt;View Injection 라이브러리. 코드량을 줄여준다. 이쁜 코드는 덤&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;h4&gt;데이터&lt;/h4&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;b&gt;Simple XML&lt;/b&gt;: http://simple.sourceforge.net/&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;XML&lt;/span&gt;과 자바 클래스의&lt;span lang=&quot;EN-US&quot;&gt; serialize, deserialize&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;b&gt;Gson&lt;/b&gt;: https://code.google.com/p/google-gson/&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;JSON&lt;/span&gt;과 자바 클래스의&lt;span lang=&quot;EN-US&quot;&gt; serialize / deserialize&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;h4&gt;네트워크&lt;/h4&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;&lt;b&gt;http-request&lt;/b&gt;: https://github.com/kevinsawicki/http-request&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;MsoNormal&quot;&gt;&lt;span lang=&quot;EN-US&quot;&gt;InputStream&lt;/span&gt;같은거 신경쓰지 않고 처리해주는 좋은&lt;span lang=&quot;EN-US&quot;&gt; http &lt;/span&gt;라이브러리&lt;span lang=&quot;EN-US&quot;&gt;(HttpURLConnection &lt;/span&gt;기반&lt;span lang=&quot;EN-US&quot;&gt;)&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/div&gt;</description>
            <link>http://changyeopkim.blogspot.com/2013/05/android.html</link>
            <author>noreply@blogger.com (김창엽)</author>
            <thr:total>0</thr:total>
        </item>
        <item>
            <guid isPermaLink="false">tag:blogger.com,1999:blog-7398307829676957263.post-7083615015742969257</guid>
            <pubDate>Wed, 10 Apr 2013 09:49:00 +0000</pubDate>
            <atom:updated>2013-04-10T03:05:53.047-07:00</atom:updated>
            <category domain="http://www.blogger.com/atom/ns#">Android</category>
            <title>Using Cryptography to Store Credentials Safely (암호 기법을 통한 자격 증명 안전하게 보관하기)</title>
            <description>&lt;br /&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; padding-bottom: 0px !important; padding-left: 0px; padding-right: 0px; padding-top: 0px !important; text-align: justify;&quot;&gt;원문:&amp;nbsp;&lt;a class=&quot;tx-link&quot; href=&quot;http://android-developers.blogspot.kr/2013/02/using-cryptography-to-store-credentials.html&quot; style=&quot;color: #996633; font-size: 9pt; line-height: 1.5; margin: 0px; padding: 0px; text-decoration: initial;&quot; target=&quot;_blank&quot;&gt;http://android-developers.blogspot.kr/2013/02/using-cryptography-to-store-credentials.html&lt;/a&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; padding-bottom: 0px !important; padding-left: 0px; padding-right: 0px; padding-top: 0px !important; text-align: justify;&quot;&gt;&lt;em style=&quot;background-color: #f9f9f9; font-family: &#39;Droid Sans&#39;; margin: 0px; padding: 0px;&quot;&gt;Posted by&amp;nbsp;&lt;a href=&quot;https://plus.google.com/114249855229891870149&quot; style=&quot;color: #258aaf; margin: 0px; padding: 0px; text-decoration: initial;&quot;&gt;Trevor Johns&lt;/a&gt;, Android Developer Relations team&lt;/em&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; padding-bottom: 0px !important; padding-left: 0px; padding-right: 0px; padding-top: 0px !important; text-align: justify;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px;&quot; /&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; padding-bottom: 0px !important; padding-left: 0px; padding-right: 0px; padding-top: 0px !important; text-align: justify;&quot;&gt;지난해 구글 I/O에서의&amp;nbsp;&lt;a href=&quot;https://developers.google.com/events/io/sessions/gooio2012/107/&quot; style=&quot;background-color: #f9f9f9; color: #258aaf; font-family: &#39;Droid Sans&#39;; margin: 0px; padding: 0px; text-decoration: initial;&quot;&gt;&quot;Security and Privacy in Android Apps&quot;&lt;/a&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5; margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;발표 이후에, 많은 사람들이 어떻게 안드로이드에서 암호 기법을 사용할 것인지에 대해&amp;nbsp;구체적인 질문을 했다. 대부분의 질문들이 특정 목적을 위해 어떤&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; padding-bottom: 0px !important; padding-left: 0px; padding-right: 0px; padding-top: 0px !important; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5; margin: 0px; padding: 0px;&quot;&gt;API를 사용해야하는지에 대한 것이었다. 이제부터&amp;nbsp;유저의 개인 증명(암호나 인증 토큰)을 로컬 저장소에 안전하게 암호 기법을 통하여 저장하는 방법을 살펴보자.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; padding-bottom: 0px !important; padding-left: 0px; padding-right: 0px; padding-top: 0px !important; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5; margin: 0px; padding: 0px;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px;&quot; /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; padding-bottom: 0px !important; padding-left: 0px; padding-right: 0px; padding-top: 0px !important; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5; margin: 0px; padding: 0px;&quot;&gt;&lt;b style=&quot;margin: 0px; padding: 0px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; margin: 0px; padding: 0px;&quot;&gt;바람직하지 않은 방법&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; padding-bottom: 0px !important; padding-left: 0px; padding-right: 0px; padding-top: 0px !important; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 9pt; margin: 0px; padding: 0px;&quot;&gt;우리가 최근에 우려하고 있는&amp;nbsp;일반적인(그러나 잘못된) 패턴은&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://developer.android.com/reference/java/security/SecureRandom.html&quot; style=&quot;background-color: #f9f9f9; color: #258aaf; font-family: monospace; margin: 0px; padding: 0px; text-decoration: initial;&quot;&gt;SecureRandom&lt;/a&gt;을 결정적인 키 생성으로 사용하여,&amp;nbsp;로컬 증명 캐쉬를 암호화하는 것이다. 이러한 예시는 찾기 어렵지 않다,&amp;nbsp;&lt;a href=&quot;http://www.androidsnippets.com/encryptdecrypt-strings&quot; style=&quot;background-color: #f9f9f9; color: #258aaf; font-family: &#39;Droid Sans&#39;; margin: 0px; padding: 0px; text-decoration: initial;&quot;&gt;here&lt;/a&gt;&lt;span style=&quot;background-color: #f9f9f9; font-family: &#39;Droid Sans&#39;; margin: 0px; padding: 0px;&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://stackoverflow.com/questions/13433529/android-4-2-broke-my-encrypt-decrypt-code-and-the-provided-solutions-dont-work&quot; style=&quot;background-color: #f9f9f9; color: #258aaf; font-family: &#39;Droid Sans&#39;; margin: 0px; padding: 0px; text-decoration: initial;&quot;&gt;here&lt;/a&gt;&lt;span style=&quot;background-color: #f9f9f9; font-family: &#39;Droid Sans&#39;; margin: 0px; padding: 0px;&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://stackoverflow.com/questions/13383006/encryption-error-on-android-4-2&quot; style=&quot;background-color: #f9f9f9; color: #258aaf; font-family: &#39;Droid Sans&#39;; margin: 0px; padding: 0px; text-decoration: initial;&quot;&gt;here&lt;/a&gt;&lt;span style=&quot;background-color: #f9f9f9; font-family: &#39;Droid Sans&#39;; margin: 0px; padding: 0px;&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5; margin: 0px; padding: 0px;&quot;&gt;혹은 어디에서나 찾아볼 수 있다.&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; padding-bottom: 0px !important; padding-left: 0px; padding-right: 0px; padding-top: 0px !important; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5; margin: 0px; padding: 0px;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px;&quot; /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; padding-bottom: 0px !important; padding-left: 0px; padding-right: 0px; padding-top: 0px !important; text-align: justify;&quot;&gt;이 패턴은&amp;nbsp;암호키를 문자열로 APK안에 직접 보관하는 대신 키를 생성하기위한 프록시 문자열을 사용한다(이는 패스프레이즈와 비슷하다).&amp;nbsp;이것은 근본적으로 키를 난독화하고 공격자가&amp;nbsp;읽을 수 없도록한다. 그러나, 숙련된 공격자는 쉽게 해독할 수 있다. 추천하지 않는 방법이다.&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; padding-bottom: 0px !important; padding-left: 0px; padding-right: 0px; padding-top: 0px !important; text-align: justify;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px;&quot; /&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; padding-bottom: 0px !important; padding-left: 0px; padding-right: 0px; padding-top: 0px !important; text-align: justify;&quot;&gt;사실, 안드로이드의 존재하는 보안 모델은 이러한 데이터를 위해서 많은 종류의 방어책을 제공한다. 유저 증명은 권한이 강제로 부여되어있지 않은&amp;nbsp;SD카드에 저장되기보다는,&amp;nbsp;반드시&amp;nbsp;&lt;a href=&quot;http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE&quot; style=&quot;background-color: #f9f9f9; color: #258aaf; font-family: monospace; margin: 0px; padding: 0px; text-decoration: initial;&quot;&gt;MODE_PRIVATE&lt;/a&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5; margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;플래그를 설정하고 내장 저장소에 저장되어야한다. 디바이스의 암호화와 조합하면 대부분의 증명을 대상으로 한 공격을 방어할 수 있다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; padding-bottom: 0px !important; padding-left: 0px; padding-right: 0px; padding-top: 0px !important; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5; margin: 0px; padding: 0px;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px;&quot; /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; padding-bottom: 0px !important; padding-left: 0px; padding-right: 0px; padding-top: 0px !important; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5; margin: 0px; padding: 0px;&quot;&gt;그러나, SecureRandom을 위처럼 사용하는 것에는 또 다른 문제가 있다. 안드로이드 4.2부터 기본 SecureRandom은 OpenSSL을 제공하고, 개발자는 더 이상 SecureRandom의 내부 상태를 오버라이드할 수 없다. 아래의 코드를 보자.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; padding-bottom: 0px !important; padding-left: 0px; padding-right: 0px; padding-top: 0px !important; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5; margin: 0px; padding: 0px;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px;&quot; /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; padding-bottom: 0px !important; padding-left: 0px; padding-right: 0px; padding-top: 0px !important; text-align: justify;&quot;&gt;&lt;/div&gt;&lt;pre class=&quot;prettyprint&quot; style=&quot;background-color: #f7f7f7; border: 1px solid rgb(221, 221, 221); color: #333333; font-size: 13px; overflow: auto; padding: 1em; text-align: justify;&quot;&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;SecureRandom&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; secureRandom &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;SecureRandom&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color: #880000; margin: 0px; padding: 0px;&quot;&gt;// Prior to Android 4.2, the next line would always return the same number!&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&amp;nbsp; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;secureRandom&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;());&lt;/span&gt;&lt;/pre&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;이전의 Bouncy Castle 기반의 구현은, 내부적으로 생성된&amp;nbsp;&lt;span style=&quot;font-size: 9pt; line-height: 1.5; margin: 0px; padding: 0px;&quot;&gt;/dev/urandom을 기반으로 한 각각의&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-size: 9pt; line-height: 1.5; margin: 0px; padding: 0px;&quot;&gt;SecureRandom 인스턴스를 위한 키를 오버라이딩하는 것을 허용했다. 명시적으로 난수 생성기를 시드(seed)하려는 개발자들은, 그들이 존재하는 시드를 보충하는 것이 아니라 교체하는 것을 발견할 수있다(이는&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: #f9f9f9; font-family: &#39;Droid Sans&#39;; margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;http://developer.android.com/reference/java/security/SecureRandom.html#insecure_seed&quot; style=&quot;background-color: #f9f9f9; color: #33b5e5; font-family: &#39;Droid Sans&#39;; margin: 0px; padding: 0px;&quot;&gt;reference implementation’s documentation&lt;/a&gt;&amp;nbsp;문서와는 대조된다). OpenSSL하에서, 이러한 오류가 발생하기 쉬운 행동은 더이상 가능하지 않다.&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px;&quot; /&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;불행하게도, 예전 구현에 의존한 어플리케이션들은 어플리케이션이 시작될 때마다 매번 SecureRandom의 결과가 바뀌는 것을 발견할 것이다.(사실 이것이 바람직인 난수 생성의 특성이다!). 이런식으로 암호키를 난독화하는 것은 더 이상 동작하지 않는다.&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px;&quot; /&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;&lt;b style=&quot;margin: 0px; padding: 0px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; margin: 0px; padding: 0px;&quot;&gt;올바른 방법&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 9pt; margin: 0px; padding: 0px;&quot;&gt;&lt;b style=&quot;margin: 0px; padding: 0px;&quot;&gt;&lt;/b&gt;더 합리적인 접근은 어플리케이션이 처음 실행되었을 때 임의의 AES 키를 생성하는 것이다.&lt;b style=&quot;margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;&lt;pre class=&quot;prettyprint&quot; style=&quot;background-color: #f7f7f7; border: 1px solid rgb(221, 221, 221); overflow: auto; padding: 1em;&quot;&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;SecretKey&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; generateKey&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;throws&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;NoSuchAlgorithmException&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color: #880000; margin: 0px; padding: 0px;&quot;&gt;// Generate a 256-bit key&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;final&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; outputKeyLength &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color: #006666; margin: 0px; padding: 0px;&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;SecureRandom&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; secureRandom &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;SecureRandom&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color: #880000; margin: 0px; padding: 0px;&quot;&gt;// Do *not* seed secureRandom! Automatically seeded from system entropy.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;KeyGenerator&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; keyGenerator &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;KeyGenerator&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot; style=&quot;color: #008800; margin: 0px; padding: 0px;&quot;&gt;&quot;AES&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; keyGenerator&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;outputKeyLength&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; secureRandom&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;SecretKey&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; key &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; keyGenerator&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;generateKey&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; key&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;이 방법의 보안성은 내장 저장소의 보안성에 근거한&amp;nbsp;생성키 보호에 달려있다. 대상 파일을 암호화하지 않고(그러나 MODE_PRIVATE으로 설정하고) 놔두는 것도 비슷한 보안을 제공한다.&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px;&quot; /&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;&lt;b style=&quot;margin: 0px; padding: 0px;&quot;&gt;&lt;span style=&quot;font-size: 11pt; margin: 0px; padding: 0px;&quot;&gt;더 안전한 보안을 위해&lt;/span&gt;&lt;/b&gt;&amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;당신의 앱이 추가적인 암호화를 필요로한다면, 추천하는 방법은 어플리케이션에 접근할때 패스프레이즈나 PIN코드를 요구하는 것이다. 이 패스프레이즈는 PBKDF2를 통해 공급받아 암호키를 생성할 수 있다(PBKDF2는 패스프레이즈로부터 키를 얻는 일반적으로 사용되는 알고리즘이다. 이 기법은&amp;nbsp;Key Stretching이라고도 알려져 있다). 안드로이드는&amp;nbsp;&lt;span style=&quot;background-color: #f9f9f9; font-family: &#39;Droid Sans&#39;; margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;background-color: #f9f9f9; background-image: url(http://ts.daumcdn.net/custom/blog/35/353678/skin/images/bg_line.gif); border: 1px solid rgb(239, 239, 239); color: #111111; display: block; font-family: Monaco, &#39;Bitstream Vera Sans Mono&#39;, &#39;Andale Mono&#39;, &#39;Lucida Console&#39;, monospace; line-height: normal; margin: 5px 0px; overflow: auto; padding: 10px; white-space: pre;&quot;&gt;&lt;a href=&quot;http://developer.android.com/reference/javax/crypto/SecretKeyFactory.html&quot; style=&quot;color: #258aaf; margin: 0px; padding: 0px; text-decoration: initial;&quot;&gt;SecretKeyFactory&lt;/a&gt;&lt;/code&gt;&lt;span style=&quot;background-color: #f9f9f9; font-family: &#39;Droid Sans&#39;; margin: 0px; padding: 0px;&quot;&gt;&amp;nbsp;의 PBKDF2WithHmacSHA1을 통해 이 알고리즘을 제공한다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: #f9f9f9; font-family: &#39;Droid Sans&#39;; margin: 0px; padding: 0px;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px;&quot; /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;&lt;pre class=&quot;prettyprint&quot; style=&quot;background-color: #f7f7f7; border: 1px solid rgb(221, 221, 221); overflow: auto; padding: 1em;&quot;&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;SecretKey&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; generateKey&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; passphraseOrPin&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; salt&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;throws&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;NoSuchAlgorithmException&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;InvalidKeySpecException&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color: #880000; margin: 0px; padding: 0px;&quot;&gt;// Number of PBKDF2 hardening rounds to use. Larger values increase&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color: #880000; margin: 0px; padding: 0px;&quot;&gt;// computation time. You should select a value that causes computation&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color: #880000; margin: 0px; padding: 0px;&quot;&gt;// to take &amp;gt;100ms.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;final&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; iterations &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color: #006666; margin: 0px; padding: 0px;&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;com&quot; style=&quot;color: #880000; margin: 0px; padding: 0px;&quot;&gt;// Generate a 256-bit key&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;final&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; outputKeyLength &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;lit&quot; style=&quot;color: #006666; margin: 0px; padding: 0px;&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;SecretKeyFactory&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; secretKeyFactory &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;SecretKeyFactory&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;str&quot; style=&quot;color: #008800; margin: 0px; padding: 0px;&quot;&gt;&quot;PBKDF2WithHmacSHA1&quot;&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;KeySpec&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; keySpec &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;PBEKeySpec&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;passphraseOrPin&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; salt&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; iterations&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; outputKeyLength&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;typ&quot; style=&quot;color: #660066; margin: 0px; padding: 0px;&quot;&gt;SecretKey&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; secretKey &lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; secretKeyFactory&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;generateSecret&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;keySpec&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class=&quot;kwd&quot; style=&quot;color: #000088; margin: 0px; padding: 0px;&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt; secretKey&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;pln&quot; style=&quot;color: black; margin: 0px; padding: 0px;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&quot;pun&quot; style=&quot;color: #666600; margin: 0px; padding: 0px;&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: #f9f9f9; font-family: &#39;Droid Sans&#39;; line-height: 1.5; margin: 0px; padding: 0px;&quot;&gt;&lt;span style=&quot;background-color: white; color: black; font-family: Dotum, 돋움; font-size: 9pt; margin: 0px; padding: 0px;&quot;&gt;솔트는 임의 문자열이어야하고, 다시&amp;nbsp;SecureRandom을 통해 생성되며, 다른 암호화된 데이터와 같이 내장 저장소에 저장되어야한다. 이것은 암호 해쉬를 미리 계산하기위한 레인보우 테이블을 이용한 공격의 위험성을 완화시는데 중요하게 사용된다.&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;&lt;span style=&quot;background-color: #f9f9f9; font-family: &#39;Droid Sans&#39;; line-height: 1.5; margin: 0px; padding: 0px;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px;&quot; /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;&lt;span style=&quot;font-family: Droid Sans; font-size: x-small; margin: 0px; padding: 0px;&quot;&gt;&lt;span style=&quot;line-height: 19px; margin: 0px; padding: 0px;&quot;&gt;&lt;b style=&quot;margin: 0px; padding: 0px;&quot;&gt;&lt;span style=&quot;font-family: Dotum, 돋움; font-size: 11pt; margin: 0px; padding: 0px;&quot;&gt;적절한 SecureRandom을 사용하기 위해 당신의 앱을 체크하라&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;&lt;span style=&quot;font-family: Droid Sans; font-size: x-small; margin: 0px; padding: 0px;&quot;&gt;&lt;span style=&quot;line-height: 19px; margin: 0px; padding: 0px;&quot;&gt;&lt;span style=&quot;font-size: 9pt; margin: 0px; padding: 0px;&quot;&gt;&lt;b style=&quot;margin: 0px; padding: 0px;&quot;&gt;&lt;/b&gt;&lt;span style=&quot;font-family: Dotum, 돋움; margin: 0px; padding: 0px;&quot;&gt;위에서 언급했고&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;http://android-developers.blogspot.com/2013/02/security-enhancements-in-jelly-bean.html&quot; style=&quot;background-color: #f9f9f9; color: #258aaf; font-family: &#39;Droid Sans&#39;; margin: 0px; padding: 0px; text-decoration: initial;&quot;&gt;&lt;span style=&quot;font-family: Dotum, 돋움; margin: 0px; padding: 0px;&quot;&gt;New Security Features in Jelly Bean&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-family: Dotum, 돋움; margin: 0px; padding: 0px;&quot;&gt;에도 나와있듯이, SecureRandom의 기본 구현이 안드로이드 4.2에서 바뀌었다. 결정론적으로 키를 생성하는 것(seed를 강제로 설정하는 것)은 더 이상 가능하지 않다.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;&lt;br style=&quot;margin: 0px; padding: 0px;&quot; /&gt;&lt;/div&gt;&lt;div style=&quot;background-color: white; color: #333333; font-family: NanumGothic, 나눔고딕, &#39;Malgun Gothic&#39;, &#39;맑은 고딕&#39;, &#39;Lucida Grande&#39;, &#39;Segoe UI&#39;, Arial, AppleGothic, sans-serif; font-size: 13px; line-height: 25px; margin: 0px; padding: 0px; text-align: justify;&quot;&gt;&lt;span style=&quot;font-family: Dotum, 돋움; margin: 0px; padding: 0px;&quot;&gt;만약 당신이 잘못된 방식으로 키를 생성하고 있던 개발자라면, 우리는 당신의 앱을 오늘 업그레이드하는 것을 추천한다. 이를 통해 안드로이드 4.2 버전이나 그 이후의 버전으로 업그레이드하는 사람들이 많아질수록 발생할 수 있는 감지하기 힘든 문제를 방지할 수 있다.&lt;/span&gt;&lt;/div&gt;</description>
            <link>http://changyeopkim.blogspot.com/2013/04/using-cryptography-to-store-credentials.html</link>
            <author>noreply@blogger.com (김창엽)</author>
            <thr:total>0</thr:total>
        </item>
    </channel>
</rss>